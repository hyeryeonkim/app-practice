<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.jhs.at.dao.ArticleDao">
	<select id="getForPrintArticles" resultType="Article">
		SELECT *
		FROM article
		WHERE displayStatus = 1
		<if
			test="searchKeywordType.equals('title') and searchKeywordTypeBody.equals('body') and searchKeyword.length() > 0">
			AND title like CONCAT('%', #{searchKeyword}, '%')
			OR body like
			CONCAT('%', #{searchKeyword}, '%')
		</if>
		ORDER BY id DESC
		LIMIT #{limitFrom}, ${itemsInAPage}
	</select>

	<select id="getForPrintListArticlesCount" resultType="int">
		SELECT COUNT(*) AS cnt
		FROM article
		WHERE displayStatus = 1
		<if
			test="searchKeywordType.equals('title') and searchKeywordTypeBody.equals('body') and searchKeyword.length() >0 ">
			AND title like CONCAT('%', #{searchKeyword}, '%')
			OR body like
			CONCAT('%', #{searchKeyword}, '%')
		</if>
	</select>


	<select id="getForPrintArticleById" resultMap="article">
		SELECT AR.*,
		M.nickname AS extra__writer
		FROM article AS AR
		INNER JOIN member AS M
		ON
		AR.memberId = M.id
		WHERE AR.displayStatus = 1
		AND AR.id = #{id}
	</select>
	<!-- 게시물 상세보기 작성자 만들고 있음 -->




	<!-- <select id="getForPrintArticleById" resultType="Article"> -->
	<!-- SELECT * -->
	<!-- FROM -->
	<!-- article -->
	<!-- WHERE id = #{id} -->
	<!-- </select> -->

	<!-- parameterType : 메소드의 형태가 map임을 의미, 생략 가능 -->
	<!-- parameterType 이 int다 doWrite(int id) 의 형태라면 -->
	<!-- 만약 매개변수를 어노테이션을 통해서 받았다면 굳이 parameterType을 쓸 필요도 없다 -->
	<!-- useGeneratedKeys : AUTO_INCREMENT id를 사용하겠다. 라는 의미__새 아이디 생성 -->
	<!-- keyProperty="id"를 적어주면 메서드의 param에 id는 없었으나 id가 추가된다! -->
	<insert id="write" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO article
		SET regDate = NOW(),
		updateDate = NOW(),
		displayStatus = 1,
		title = #{title},
		body = #{body},
		memberId = #{memberId}
	</insert>

	<update id="modify" parameterType="map">
		UPDATE article
		SET updateDate =
		NOW(),
		title = #{title},
		body = #{body}
		WHERE id = #{id}
	</update>

	<update id="softDelete" parameterType="map">
		UPDATE article
		SET
		delStatus = 1,
		delDate = NOW(),
		displayStatus = 0
		WHERE id = #{id}
	</update>

	<update id="hitUp" parameterType="int">
		UPDATE article
		SET hit = hit + 1
		WHERE id = #{id}
	</update>

	<update id="deleteModify" parameterType="int">
		UPDATE article
		SET
		delStatus =1,
		dleDate = NOW(),
		displayStatus = 1,
		WHERE id = #{id}
	</update>
	<select id="getForPageMoveBeforeArticle" resultType="Integer">
		SELECT id
		FROM article
		WHERE id <![CDATA[<]]>#{id}
		AND displayStatus = 1
		ORDER BY id DESC
		LIMIT 1

	</select>

	<select id="getForPageMoveAfterArticle" resultType="Integer">

		SELECT id
		FROM article
		WHERE id <![CDATA[>]]>#{id}
		AND displayStatus = 1
		ORDER BY id ASC
		LIMIT 1

	</select>

	<insert id="writeReply" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO
		reply
		SET regDate = NOW(),
		updateDate = NOW(),
		displayStatus = 1,
		relTypeCode = #{relTypeCode},
		relId = #{relId},
		body = #{body},
		memberId =
		#{memberId}
	</insert>


	<!-- articleDao.java 에서 해당 메서드의 인자를 articleId로 셋팅해두었기 때문에 #{articleId}로 
		사용 가능 -->
	<select id="getForPrintReplies" resultMap="reply">
		SELECT *
		FROM
		reply
		WHERE displayStatus = 1
		AND relId = #{relId}
		relTypeCode = 'article'
		ORDER
		BY id DESC
	</select>

	<select id="getReply" resultMap="reply">
		SELECT *
		FROM
		reply
		WHERE id = #{id}
	</select>

	<update id="softDeleteReply">
		UPDATE reply
		SET
		delStatus = 1,
		delDate = NOW(),
		displayStatus = 0
		WHERE id = #{id}
	</update>
	<select id="getForPrintReplyById"
		resultMap="reply">
		SELECT AR.*,
		M.nickname AS extra__writer
		FROM reply AS
		AR
		INNER JOIN member AS M
		ON AR.memberId = M.id
		WHERE AR.id = #{id}
		AND
		AR.displayStatus = 1
		AND AR.id = #{id}
	</select>

	
	<select id="getForPrintRepliesFrom"  resultMap="reply">
		 <![CDATA[
		SELECT AR.*,
		M.nickname AS extra__writer
		FROM reply AS AR
		INNER JOIN member AS M
		ON AR.memberId = M.id
		WHERE AR.relId = #{relId}
		AND AR.relTypeCode = #{relTypeCode}
		AND AR.displayStatus = 1
		AND AR.id >= #{from}
		ORDER BY AR.id ASC
		]]>
		<!-- 샘은 ORDER BY id ASC 하시고, reverse 사용 안하심 -->
	</select>




	<resultMap type="Reply" id="reply">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<id property="relId" column="relId" />
		<id property="relTypeCode" column="relTypeCode" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
		</association>
	</resultMap>


	<resultMap type="Article" id="article">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="body" column="body" />
		<id property="title" column="title" />
		<id property="hit" column="hit" />
		<id property="memberId" column="memberId" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
		</association>
	</resultMap>

</mapper>
